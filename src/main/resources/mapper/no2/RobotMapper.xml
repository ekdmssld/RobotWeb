<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tsei.www.mapper.no2.RobotMapper">

    <!-- 1. 로봇 이동 경로 조회 (car_detail 테이블에서 car_code = 'robot1') -->
    <select id="getRobotRouteByDate" resultType="com.tsei.www.dto.robot.RobotLocationDTO">
        SELECT
        idx AS detailId,                        <!-- ✅ 수정됨 -->
        lat AS latitude,
        lon AS longitude,
        update_time AS `date`,                  <!-- ✅ 컬럼명도 실제로 존재하는 것으로 -->
        NULL AS windDirection,                  <!-- 임시 빈 값 허용 시 -->
        NULL AS windSpeed,
        car_code AS carCode
        FROM car_detail
        WHERE car_code = #{carCode}
        AND update_time BETWEEN #{startTime} AND #{endTime}
    </select>

    <select id="getSensorDetailInfo" resultType="com.tsei.www.dto.robot.RobotSensorDTO">
        SELECT
            s.sensor_info_id,
            i.model_no AS sensorModel,
            i.manufacturer,
            i.target_gas AS targetGas,
            s.temp,
            s.humi,
            s.ppm_ref_go AS ppm,
            s.timestamp
        FROM sensor_data s
                 JOIN sensor_info i ON s.sensor_info_id = i.id
        WHERE s.timestamp = (
            SELECT update_time FROM car_detail WHERE idx = #{detailId}
        )
    </select>



<!--화학 반응 모달창-->
    <select id="getSensorDataByDetailId" resultType="com.tsei.www.dto.tracking.SensorDataDTO">
        SELECT
        s.sensor_info_id,
        i.target_gas AS gasName,
        ROUND(s.ppm_ref_go, 4) AS ppm,
        s.rs,
        s.ro,
        s.ref_factor AS ref
        FROM sensor_data s
        JOIN sensor_info i ON s.sensor_info_id = i.id
        WHERE s.timestamp = (
        SELECT update_time FROM car_detail WHERE idx = #{detailId}
        )
        AND s.car_code = #{carCode}
        AND s.sensor_info_id BETWEEN 1 AND 12
    </select>

    <select id="getRobotMarkers" resultType="com.tsei.www.dto.robot.RobotPathDTO">
        SELECT update_time, lat, lon, theta, volt, control_mode, error_code, measure_flag
        FROM car_detail
        WHERE car_code = #{carCode}
          AND DATE(update_time) = #{date}
        ORDER BY update_time ASC
    </select>

    <!-- RobotMapper.xml -->
    <select id="findCloseWeather" resultType="com.tsei.www.dto.tracking.WeatherDTO">
        SELECT
            car_code AS carCode,
            reg_date AS regDate,
            wd_temp AS wdTemp,
            wd_humi AS wdHumi,
            wd_wdd AS wdWdd,
            wd_wds AS wdWds
        FROM weather_data
        WHERE car_code = #{carCode}
        ORDER BY ABS(TIMESTAMPDIFF(SECOND, reg_date, STR_TO_DATE(#{timestamp}, '%Y-%m-%d %H:%i:%s'))) ASC
            LIMIT 1
    </select>







    <select id="getAvailableDates" resultType="string">
        SELECT DISTINCT DATE(update_time)
        FROM car_detail
        WHERE car_code = #{carCode}
        ORDER BY DATE(update_time) DESC
    </select>



</mapper>
